{"ast":null,"code":"var _jsxFileName = \"/Users/joeldelatte/portfolioProjects/solsticeAssessment/solstice/client/src/components/Dashboard/CustomerAccounts.js\";\nimport React, { useContext, useState, useEffect, useLayoutEffect } from \"react\";\nimport http from \"../../utils/http-common\";\nimport Account from \"../Main/Accounts/Account\";\nimport { CustomerContext } from \"../../utils/CustomerContext\";\n\nconst CustomerAccounts = () => {\n  const {\n    globalCustomer\n  } = useContext(CustomerContext);\n  const [accounts, setAccounts] = useState([]);\n  const [customerAccounts, setCustomerAccounts] = useState();\n  const [customerID, setCustomerID] = useState();\n\n  function getAllAccounts() {\n    http.get(\"/accounts\").then(function (response) {\n      let data = response.data.accounts.map((item, index) => item.customer_id.indexOf(customerID) == -1);\n      console.log(data);\n      setAccounts(data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  } // function setProfileAccounts() {\n  //     response.data.accounts.filter((element)=>{\n  //         if (element.id === customerID) {\n  //             setCustomerAccounts(element);\n  //         }\n  //     })\n  // }\n\n\n  const items = accounts.filter(item => item.customer_id.indexOf(globalCustomer.id) !== -1);\n  useEffect(() => {\n    globalCustomer && setCustomerID(globalCustomer.id);\n    console.log(customerID);\n  }, [globalCustomer, customerID]);\n  useLayoutEffect(() => {\n    getAllAccounts();\n  }, [globalCustomer]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Customer's Accounts:\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Customer ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Solar Farm ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Capacity Share\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Created On\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, accounts && accounts.map((account, index) => {\n    return /*#__PURE__*/React.createElement(Account, {\n      key: index // click={() => props.clicked(index)}\n      ,\n      customer_id: account.customer_id,\n      address: account.address,\n      city: account.city,\n      state: account.state,\n      zip_code: account.zip_code,\n      solar_farm_id: account.solar_farm_id,\n      capacity_share: account.capacity_share,\n      created_date: account.created_date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    });\n  })))));\n};\n\nexport default CustomerAccounts;","map":{"version":3,"sources":["/Users/joeldelatte/portfolioProjects/solsticeAssessment/solstice/client/src/components/Dashboard/CustomerAccounts.js"],"names":["React","useContext","useState","useEffect","useLayoutEffect","http","Account","CustomerContext","CustomerAccounts","globalCustomer","accounts","setAccounts","customerAccounts","setCustomerAccounts","customerID","setCustomerID","getAllAccounts","get","then","response","data","map","item","index","customer_id","indexOf","console","log","catch","err","items","filter","id","account","address","city","state","zip_code","solar_farm_id","capacity_share","created_date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,eAAjD,QAAuE,OAAvE;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,eAAT,QAAgC,6BAAhC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAE3B,QAAM;AAAEC,IAAAA;AAAF,MAAqBR,UAAU,CAACM,eAAD,CAArC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,EAAxD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,EAA5C;;AAEA,WAASc,cAAT,GAA0B;AACxBX,IAAAA,IAAI,CACDY,GADH,CACO,WADP,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcV,QAAd,CAAuBW,GAAvB,CACT,CAACC,IAAD,EAAOC,KAAP,KAAiBD,IAAI,CAACE,WAAL,CAAiBC,OAAjB,CAAyBX,UAAzB,KAAwC,CAAC,CADjD,CAAX;AAGAY,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAT,MAAAA,WAAW,CAACS,IAAD,CAAX;AACD,KARH,EASGQ,KATH,CASS,UAAUC,GAAV,EAAe;AACpBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAXH;AAYD,GApB0B,CAsB3B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,KAAK,GAAGpB,QAAQ,CAACqB,MAAT,CAAgBT,IAAI,IAAIA,IAAI,CAACE,WAAL,CAAiBC,OAAjB,CAAyBhB,cAAc,CAACuB,EAAxC,MAAgD,CAAC,CAAzE,CAAd;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACXM,IAAAA,cAAc,IAAIM,aAAa,CAACN,cAAc,CAACuB,EAAhB,CAAhC;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;AACH,GAHQ,EAGN,CAACL,cAAD,EAAiBK,UAAjB,CAHM,CAAT;AAMAV,EAAAA,eAAe,CAAC,MAAM;AACpBY,IAAAA,cAAc;AACf,GAFc,EAEZ,CAACP,cAAD,CAFY,CAAf;AAMA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CADF,CADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,IACPA,QAAQ,CAACW,GAAT,CAAa,CAACY,OAAD,EAAUV,KAAV,KAAoB;AAC/B,wBACE,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,KADP,CAEE;AAFF;AAGE,MAAA,WAAW,EAAEU,OAAO,CAACT,WAHvB;AAIE,MAAA,OAAO,EAAES,OAAO,CAACC,OAJnB;AAKE,MAAA,IAAI,EAAED,OAAO,CAACE,IALhB;AAME,MAAA,KAAK,EAAEF,OAAO,CAACG,KANjB;AAOE,MAAA,QAAQ,EAAEH,OAAO,CAACI,QAPpB;AAQE,MAAA,aAAa,EAAEJ,OAAO,CAACK,aARzB;AASE,MAAA,cAAc,EAAEL,OAAO,CAACM,cAT1B;AAUE,MAAA,YAAY,EAAEN,OAAO,CAACO,YAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAcD,GAfD,CAFJ,CAbF,CAFF,CADF,CADF;AAyCH,CArFD;;AAuFA,eAAehC,gBAAf","sourcesContent":["import React, { useContext, useState, useEffect, useLayoutEffect} from \"react\";\nimport http from \"../../utils/http-common\";\nimport Account from \"../Main/Accounts/Account\";\nimport { CustomerContext } from \"../../utils/CustomerContext\";\n\nconst CustomerAccounts = () => {\n\n    const { globalCustomer } = useContext(CustomerContext);\n    const [accounts, setAccounts] = useState([]);\n    const [customerAccounts, setCustomerAccounts] = useState();\n    const [customerID, setCustomerID] = useState();\n\n    function getAllAccounts() {\n      http\n        .get(\"/accounts\")\n        .then(function (response) {\n          let data = response.data.accounts.map(\n            (item, index) => item.customer_id.indexOf(customerID) == -1\n          );\n          console.log(data);\n          setAccounts(data);\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n    }\n\n    // function setProfileAccounts() {\n    //     response.data.accounts.filter((element)=>{\n    //         if (element.id === customerID) {\n    //             setCustomerAccounts(element);\n    //         }\n    //     })\n    // }\n    \n    const items = accounts.filter(item => item.customer_id.indexOf(globalCustomer.id) !== -1)\n\n    useEffect(() => {\n        (globalCustomer && setCustomerID(globalCustomer.id))\n        console.log(customerID);        \n    }, [globalCustomer, customerID])\n    \n\n    useLayoutEffect(() => {\n      getAllAccounts();\n    }, [globalCustomer]);\n\n    \n\n    return (\n      <>\n        <div>\n          <h2>Customer's Accounts:</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Customer ID</th>\n                <th>Address</th>\n                <th>City</th>\n                <th>State</th>\n                <th>Zip Code</th>\n                <th>Solar Farm ID</th>\n                <th>Capacity Share</th>\n                <th>Created On</th>\n              </tr>\n            </thead>\n            <tbody>\n              {accounts &&\n                accounts.map((account, index) => {\n                  return (\n                    <Account\n                      key={index}\n                      // click={() => props.clicked(index)}\n                      customer_id={account.customer_id}\n                      address={account.address}\n                      city={account.city}\n                      state={account.state}\n                      zip_code={account.zip_code}\n                      solar_farm_id={account.solar_farm_id}\n                      capacity_share={account.capacity_share}\n                      created_date={account.created_date}\n                    />\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n\n}\n\nexport default CustomerAccounts;"]},"metadata":{},"sourceType":"module"}