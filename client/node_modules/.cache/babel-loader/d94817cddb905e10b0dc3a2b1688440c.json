{"ast":null,"code":"var _jsxFileName = \"/Users/joeldelatte/portfolioProjects/solsticeAssessment/solstice/client/src/components/Dashboard/CustomerAccounts.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport http from \"../../utils/http-common\";\nimport Account from \"../Main/Accounts/Account\";\nimport { CustomerContext } from \"../../utils/CustomerContext\";\n\nconst CustomerAccounts = () => {\n  const {\n    globalCustomer\n  } = useContext(CustomerContext);\n  const [customerAccounts, setCustomerAccounts] = useState([]);\n\n  function getCustomerAccounts(globalCustomer) {\n    http.get(\"/accounts\").then(function (response) {\n      console.log(response.data.accounts);\n      setCustomerAccounts(response.data.accounts);\n    }).then(() => {\n      setAccounts(reponse, globalCustomer);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  } // var custAcc = [];\n\n\n  function setAccounts(globalCustomer) {\n    customerAccounts.map((el, index) => {\n      while (globalCustomer.id === el.customer_id) {\n        setCustomerAccounts();\n      }\n    });\n  }\n\n  useEffect(() => {\n    getCustomerAccounts(globalCustomer);\n  }, [globalCustomer]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Customer's Accounts:\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Customer ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Solar Farm ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Capacity Share\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Created On\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, customerAccounts.map((account, index) => {\n    return /*#__PURE__*/React.createElement(Account, {\n      key: index // click={() => props.clicked(index)}\n      ,\n      customer_id: account.customer_id,\n      address: account.address,\n      city: account.city,\n      state: account.state,\n      zip_code: account.zip_code,\n      solar_farm_id: account.solar_farm_id,\n      capacity_share: account.capacity_share,\n      created_date: account.created_date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    });\n  })))));\n};\n\nexport default CustomerAccounts;","map":{"version":3,"sources":["/Users/joeldelatte/portfolioProjects/solsticeAssessment/solstice/client/src/components/Dashboard/CustomerAccounts.js"],"names":["React","useContext","useState","useEffect","http","Account","CustomerContext","CustomerAccounts","globalCustomer","customerAccounts","setCustomerAccounts","getCustomerAccounts","get","then","response","console","log","data","accounts","setAccounts","reponse","catch","err","map","el","index","id","customer_id","account","address","city","state","zip_code","solar_farm_id","capacity_share","created_date"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport http from \"../../utils/http-common\";\nimport Account from \"../Main/Accounts/Account\";\nimport { CustomerContext } from \"../../utils/CustomerContext\";\n\nconst CustomerAccounts = () => {\n\n    const { globalCustomer } = useContext(CustomerContext);\n    const [customerAccounts, setCustomerAccounts] = useState([]);\n\n    function getCustomerAccounts(globalCustomer) {\n      http\n        .get(\"/accounts\")\n        .then(function (response) {\n          console.log(response.data.accounts);\n          setCustomerAccounts(response.data.accounts)\n        })\n        .then(()=>{\n            setAccounts(reponse, globalCustomer)\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n    }\n    \n    // var custAcc = [];\n    function setAccounts(globalCustomer) {\n        customerAccounts.map((el, index)=>{\n            while(globalCustomer.id === el.customer_id) {\n                setCustomerAccounts()\n            }\n        })\n    }\n\n    useEffect(() => {\n      getCustomerAccounts(globalCustomer);\n    }, [globalCustomer]);\n\n    return (\n      <>\n        <div>\n          <h2>Customer's Accounts:</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Customer ID</th>\n                <th>Address</th>\n                <th>City</th>\n                <th>State</th>\n                <th>Zip Code</th>\n                <th>Solar Farm ID</th>\n                <th>Capacity Share</th>\n                <th>Created On</th>\n              </tr>\n            </thead>\n            <tbody>\n              {customerAccounts.map((account, index) => {\n                return (\n                  <Account\n                    key={index}\n                    // click={() => props.clicked(index)}\n                    customer_id={account.customer_id}\n                    address={account.address}\n                    city={account.city}\n                    state={account.state}\n                    zip_code={account.zip_code}\n                    solar_farm_id={account.solar_farm_id}\n                    capacity_share={account.capacity_share}\n                    created_date={account.created_date}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n\n}\n\nexport default CustomerAccounts;"]},"metadata":{},"sourceType":"module"}