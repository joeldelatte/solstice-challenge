{"ast":null,"code":"var _jsxFileName = \"/Users/joeldelatte/portfolioProjects/solsticeAssessment/solstice/client/src/components/Main/Accounts/AllAccounts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Account from \"./Account\";\nimport http from \"../../../utils/http-common\";\nimport \"../main.css\";\n\nconst AllAccounts = props => {\n  const [accounts, setAccounts] = useState([]);\n\n  function getAccounts() {\n    http.get(\"/accounts\").then(function (response) {\n      console.log(response.data.accounts);\n      setAccounts(response.data.accounts);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    getAccounts();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Accounts\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Solar Farm ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Capacity Share\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Created On\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, accounts.map((account, index) => {\n    return /*#__PURE__*/React.createElement(Account, {\n      key: index,\n      customer_id: account.customer_id,\n      address: account.address,\n      city: account.city,\n      state: account.state,\n      zip_code: account.zip_code,\n      solar_farm_id: account.solar_farm_id,\n      capacity_share: account.capacity_share,\n      created_date: account.created_date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nexport default AllAccounts;","map":{"version":3,"sources":["/Users/joeldelatte/portfolioProjects/solsticeAssessment/solstice/client/src/components/Main/Accounts/AllAccounts.js"],"names":["React","useState","useEffect","Account","http","AllAccounts","props","accounts","setAccounts","getAccounts","get","then","response","console","log","data","catch","err","map","account","index","customer_id","address","city","state","zip_code","solar_farm_id","capacity_share","created_date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAO,aAAP;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASQ,WAAT,GAAuB;AACrBL,IAAAA,IAAI,CACDM,GADH,CACO,WADP,EAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcR,QAA1B;AACAC,MAAAA,WAAW,CAACI,QAAQ,CAACG,IAAT,CAAcR,QAAf,CAAX;AACD,KALH,EAMGS,KANH,CAMS,UAAUC,GAAV,EAAe;AACpBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KARH;AASD;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CADF,CADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACW,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChC,wBACE,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,WAAW,EAAED,OAAO,CAACE,WAFvB;AAGE,MAAA,OAAO,EAAEF,OAAO,CAACG,OAHnB;AAIE,MAAA,IAAI,EAAEH,OAAO,CAACI,IAJhB;AAKE,MAAA,KAAK,EAAEJ,OAAO,CAACK,KALjB;AAME,MAAA,QAAQ,EAAEL,OAAO,CAACM,QANpB;AAOE,MAAA,aAAa,EAAEN,OAAO,CAACO,aAPzB;AAQE,MAAA,cAAc,EAAEP,OAAO,CAACQ,cAR1B;AASE,MAAA,YAAY,EAAER,OAAO,CAACS,YATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD,GAdA,CADH,CAbF,CAFF,CADF;AAoCD,CAvDD;;AAyDA,eAAevB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Account from \"./Account\";\nimport http from \"../../../utils/http-common\";\nimport \"../main.css\";\n\nconst AllAccounts = (props) => {\n  const [accounts, setAccounts] = useState([]);\n\n  function getAccounts() {\n    http\n      .get(\"/accounts\")\n      .then(function (response) {\n        console.log(response.data.accounts);\n        setAccounts(response.data.accounts);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    getAccounts();\n  }, []);\n\n  return (\n    <>\n      <h2>Accounts</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Customer</th>\n            <th>Address</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Zip Code</th>\n            <th>Solar Farm ID</th>\n            <th>Capacity Share</th>\n            <th>Created On</th>\n          </tr>\n        </thead>\n        <tbody>\n          {accounts.map((account, index) => {\n            return (\n              <Account\n                key={index}\n                customer_id={account.customer_id}\n                address={account.address}\n                city={account.city}\n                state={account.state}\n                zip_code={account.zip_code}\n                solar_farm_id={account.solar_farm_id}\n                capacity_share={account.capacity_share}\n                created_date={account.created_date}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default AllAccounts;\n"]},"metadata":{},"sourceType":"module"}